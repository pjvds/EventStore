box: ami-6f1b4406
box-type: ami
build:
  steps:
    - script:
        name: Copy libs
        code: |
          cp -r $HOME/EventStore/src/EventStore/libs/{include,lib*} $WERCKER_SOURCE_DIR/src/EventStore/libs
          ls -la $WERCKER_SOURCE_DIR/src/EventStore/libs
          
          cp -r $HOME/EventStore/v8 $WERCKER_SOURCE_DIR/
          ls -la $WERCKER_SOURCE_DIR/
    - script:
        name: build eventstore
        code: |
            ./build.sh quick
    - script:
        name: Staticly link
        code: |
            cd bin/eventstore/release/anycpu
            mkbundle -o EventStore -L $(pwd) --deps --static EventStore.SingleNode.exe EventStore.Core.dll EventStore.Common NLog Newtonsoft.Json EventStore.Transport.Tcp.dll EventStore.BufferManagement.dll protobuf-net.dll EventStore.Transport.Http.dll EventStore.Projections.Core.dll EventStore.Web.dll EventStore.Web.Playground.exe
    - script:
        name: copy output
        code: |
          mkdir $WERCKER_OUTPUT_DIR/bin
          mv bin/eventstore/release/anycpu/EventStore $WERCKER_OUTPUT_DIR/bin
          mv Dockerfile $WERCKER_OUTPUT_DIR
deploy:
  steps:
    - create-file:
        filename: $HOME/.dockercfg
        content: |-
          {
            "https://index.docker.io/v1/": {
              "auth":"$DOCKER_AUTH",
              "email":"$DOCKER_EMAIL"}
          }
    - script:
        name: Build container
        code: |
          sudo docker build -t=pjvds/eventstore .
    - script:
        name: Push container
        code: |
          sudo docker push pjvds/eventstore
